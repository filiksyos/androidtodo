name: Android CI

on:
  push:
    paths:
      - '.github/workflows/android-tests.yml'
  pull_request:
    paths:
      - '.github/workflows/android-tests.yml'

jobs:
  run-tests:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Grant execute permissions for Gradle wrapper
    - name: Grant execute permissions for gradlew
      run: chmod +x ./gradlew

    # Step 3: Set up JDK (use Java 17)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    # Step 4: Cache Gradle dependencies and build
    - name: Cache Gradle dependencies and build
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          build
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle

    # Step 5: Set up Android SDK
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33
        build-tools: 33.0.0

    # Step 6: Run tests and save results
    - name: Run tests and save results
      run: |
        mkdir -p test-results
        ./gradlew cleanTest testDebugUnitTest > test-results/testresults.txt

    # Step 7: Upload test results as artifacts
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: test-results/

    # Step 8: Check for changes and commit them
    - name: Check for changes
      id: check_changes
      run: |
        if [[ -n "$(git status --porcelain)" ]]; then
          echo "changes_detected=true" >> $GITHUB_ENV
        else
          echo "changes_detected=false" >> $GITHUB_ENV
        fi

    # Step 9: Commit and push changes
    - name: Commit and push changes
      if: env.changes_detected == 'true'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add test-results/*
        git commit -m "Update test results [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
